# app.py  ‚Äî Streamlit-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (—Ä—É—Å—Å–∫–∞—è –≤–µ—Ä—Å–∏—è)
# -----------------------------------------------
import streamlit as st
import numpy as np
import pandas as pd          # ‚Üê –Ω–æ–≤–µ–µ: –¥–ª—è one-hot
import joblib
from pathlib import Path

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
st.set_page_config(
    page_title="–ü—Ä–æ–≥–Ω–æ–∑ —Ä–∏—Å–∫–∞ —Å–µ—Ä–¥–µ—á–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π",
    page_icon="‚ù§Ô∏è",
    layout="centered",
)

st.title("üî¨ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∏—Å–∫–∞ —Å–µ—Ä–¥–µ—á–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π")

st.markdown(
    """
–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ –ª–µ–≤–æ–π –ø–∞–Ω–µ–ª–∏ –∏ –Ω–∞–∂–º–∏—Ç–µ **¬´–°–ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å¬ª**,
—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –Ω–∞–ª–∏—á–∏—è –∏–ª–∏ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–µ—Ä–¥–µ—á–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π.
"""
)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –°–∞–π–¥–±–∞—Ä: –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
with st.sidebar:
    st.header("–î–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞")

    age       = st.slider("–í–æ–∑—Ä–∞—Å—Ç", 18, 100, 45)
    sex       = st.selectbox("–ü–æ–ª", ["–ú—É–∂—á–∏–Ω–∞", "–ñ–µ–Ω—â–∏–Ω–∞"])
    cp        = st.selectbox(
        "–¢–∏–ø –±–æ–ª–∏ –≤ –≥—Ä—É–¥–∏",
        ["–ë–µ—Å—Å–∏–º–ø—Ç–æ–º–Ω–∞—è (0)",
         "–ê—Ç–∏–ø–∏—á–Ω–∞—è —Å—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è (1)",
         "–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Å—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è (2)",
         "–¢–∏–ø–∏—á–Ω–∞—è —Å—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è (3)"],
    )
    trestbps  = st.slider("–ê–†–¢ (–º–º —Ä—Ç. —Å—Ç.)", 80, 200, 120,
                          help="–ê—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –≤ –ø–æ–∫–æ–µ")
    chol      = st.slider("–•–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω (mg/dl)", 100, 600, 200)
    fbs       = st.radio("–ì–ª—é–∫–æ–∑–∞ –Ω–∞—Ç–æ—â–∞–∫ > 120 mg/dl", ["–ù–µ—Ç", "–î–∞"])
    restecg   = st.selectbox(
        "–≠–ö–ì –≤ –ø–æ–∫–æ–µ",
        ["–ù–æ—Ä–º–∞–ª—å–Ω–∞—è (0)", "ST-T –∞–Ω–æ–º–∞–ª–∏—è (1)", "–ì–∏–ø–µ—Ä—Ç—Ä–æ—Ñ–∏—è –õ–ñ (2)"],
    )
    thalach   = st.slider("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ß–°–°", 60, 220, 150)
    exang     = st.radio("–°—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è –ø—Ä–∏ –Ω–∞–≥—Ä—É–∑–∫–µ", ["–ù–µ—Ç", "–î–∞"])
    oldpeak   = st.slider("–°–¥–≤–∏–≥ ST", 0.0, 6.2, 1.0, step=0.1)
    slope     = st.selectbox(
        "–ù–∞–∫–ª–æ–Ω ST —Å–µ–≥–º–µ–Ω—Ç–∞", ["–í–≤–µ—Ä—Ö (0)", "–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ (1)", "–í–Ω–∏–∑ (2)"]
    )
    ca        = st.selectbox("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä—É–ø–Ω—ã—Ö —Å–æ—Å—É–¥–æ–≤ (0‚Äì4)", list(range(5)))
    thal      = st.selectbox(
        "–¢–∞–ª–ª–∏–π-—Ç–µ—Å—Ç",
        ["–ù–æ—Ä–º–∞–ª—å–Ω—ã–π (1)", "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–µ—Ñ–µ–∫—Ç (2)", "–û–±—Ä–∞—Ç–∏–º—ã–π –¥–µ—Ñ–µ–∫—Ç (3)"],
    )

    predict_btn = st.button("–°–ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å")

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ (–∫—ç—à–∏—Ä—É–µ—Ç—Å—è) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
@st.cache_resource(show_spinner=False)
def load_model(path: str = "rs1.pkl"):
    return joblib.load(Path(__file__).parent / path)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–æ–¥ 18-–∫–æ–ª–æ–Ω–æ—á–Ω—É—é –º–æ–¥–µ–ª—å ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def build_features_df(model):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç DataFrame —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏ —Ä–æ–≤–Ω–æ –≤ —Ç–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤ –∫–∞–∫–æ–º
    –º–æ–¥–µ–ª—å –æ–±—É—á–∞–ª–∞—Å—å (model.feature_names_in_)."""

    raw = {
        "age": age,
        "sex": 1 if sex == "–ú—É–∂—á–∏–Ω–∞" else 0,
        "trestbps": trestbps,
        "chol": chol,
        "fbs": 1 if fbs == "–î–∞" else 0,
        "thalach": thalach,
        "exang": 1 if exang == "–î–∞" else 0,
        "oldpeak": oldpeak,
        "ca": ca,
        "cp": ["–ë–µ—Å—Å–∏–º–ø—Ç–æ–º–Ω–∞—è (0)",
               "–ê—Ç–∏–ø–∏—á–Ω–∞—è —Å—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è (1)",
               "–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Å—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è (2)",
               "–¢–∏–ø–∏—á–Ω–∞—è —Å—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è (3)"].index(cp),
        "restecg": ["–ù–æ—Ä–º–∞–ª—å–Ω–∞—è (0)",
                    "ST-T –∞–Ω–æ–º–∞–ª–∏—è (1)",
                    "–ì–∏–ø–µ—Ä—Ç—Ä–æ—Ñ–∏—è –õ–ñ (2)"].index(restecg),
        "slope": ["–í–≤–µ—Ä—Ö (0)", "–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ (1)", "–í–Ω–∏–∑ (2)"].index(slope),
        "thal": ["–ù–æ—Ä–º–∞–ª—å–Ω—ã–π (1)",
                 "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–µ—Ñ–µ–∫—Ç (2)",
                 "–û–±—Ä–∞—Ç–∏–º—ã–π –¥–µ—Ñ–µ–∫—Ç (3)"].index(thal) + 1,   # 1‚Äì3
    }

    df = pd.DataFrame([raw])

    # One-hot –¥–ª—è —Ç—Ä—ë—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ ‚Äî –∫–∞–∫ –≤ –Ω–æ—É—Ç–±—É–∫–µ
    cat_cols = ["cp", "restecg", "slope"]
    df = pd.get_dummies(df, columns=cat_cols, prefix=cat_cols)

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ dummy-–∫–æ–ª–æ–Ω–∫–∏ (fill_value=0) –∏ —É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–µ–º
    feature_cols = model.feature_names_in_
    df = df.reindex(columns=feature_cols, fill_value=0)

    return df

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
if predict_btn:
    model = load_model()
    X = build_features_df(model).values      # shape (1, 18)
    prob = model.predict_proba(X)[0, 1] * 100

    st.subheader(f"ü©∫ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è: **{prob:.1f}%**")
    st.progress(prob / 100)

    if prob >= 50:
        st.error("–ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —Ä–∏—Å–∫ ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∞.")
    else:
        st.success("–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫ –ø–æ —Ç–µ–∫—É—â–∏–º –¥–∞–Ω–Ω—ã–º.")
